name: HyperCPU CI/CD Pipeline (build HyperCPU on different platforms)

on: [push]

jobs:
  fedora:
    runs-on: self-hosted
    continue-on-error: true

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:fedora
          shell: bash
          run: |
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

  debian-stable:
    runs-on: self-hosted
    continue-on-error: true

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:debian-stable
          shell: bash
          run: |
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

  debian-unstable:
    runs-on: self-hosted
    continue-on-error: true

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:debian-unstable
          shell: bash
          run: |
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

  archlinux:
    runs-on: self-hosted
    continue-on-error: true

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:archlinux
          shell: bash
          run: |
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

  gentoo-glibc:
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:gentoo-glibc
          shell: bash
          run: |
            source /etc/profile
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

name: HyperCPU CI/CD Pipeline (build HyperCPU on different platforms)

on: [push]

jobs:
  fedora:
    runs-on: self-hosted
    continue-on-error: true
    name: Build-Fedora

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:fedora
          shell: bash
          run: |
            set -e
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

  debian-stable:
    runs-on: self-hosted
    continue-on-error: true
    name: Build-Debian-Stable

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:debian-stable
          shell: bash
          run: |
            set -e
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

  debian-unstable:
    runs-on: self-hosted
    continue-on-error: true
    name: Build-Debian-Unstable

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:debian-stable
          shell: bash
          run: |
            set -e
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

  archlinux:
    runs-on: self-hosted
    continue-on-error: true
    name: Build-Arch-Linux

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:archlinux
          shell: bash
          run: |
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

  gentoo-glibc:
    runs-on: self-hosted
    continue-on-error: true
    name: Build-Gentoo-Glibc

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:gentoo-glibc
          shell: bash
          run: |
            source /etc/profile
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

  gentoo-musl:
    runs-on: self-hosted
    continue-on-error: true
    name: Build-Gentoo-Musl

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:gentoo-musl
          shell: bash
          run: |
            source /etc/profile
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

  alpine:
    runs-on: self-hosted
    continue-on-error: true
    name: Build-Alpine

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:alpine
          run: |
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4

  ubuntu:
    runs-on: self-hosted
    continue-on-error: true
    name: Build-Ubuntu

    steps:
      - uses: addnab/docker-run-action@v3
        with:
          image: hcpu-ci:ubuntu
          shell: bash
          run: |
            set -e
            git clone https://github.com/HyperWinX/HyperCPU.git --recursive --depth=1 && cd HyperCPU
            cmake -S. -Bbuild -DHCPU_COMPILER=clang -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
            rm -rf build
            cmake -S. -Bbuild -DHCPU_COMPILER=gcc -DHCPU_LTO=ON -DHCPU_SANITIZERS=OFF -DCMAKE_BUILD_TYPE=Release
            cmake --build build --target run-all-tests-github -j4
            cmake --build build --target default -j4
